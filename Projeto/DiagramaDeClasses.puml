@startuml
Aluno -- Curso
Curso --* Disciplina
Turma -- Professor
Turma -- Aluno
Turma -- Disciplina
Curso -- ICurriculo
Aluno -- ICobranca
Disciplina -- TipoDisciplina
Turma -- StatusTurma

class Curso{
    - nome: String
    - creditos: int
    - disciplinas: List<Disciplina> 
    + adicionarDisciplina(Disiplina disciplina): void
    + removerDisciplina(Disciplina disciplina): void
}

interface ICurriculo{
    + gerarCurriculoSemestral(): String
}

interface ICobranca{
    + notificarCobranca(): void
}

class Aluno{
    - nome: string
    - curso: Curso
    - disciplinaObrigatoria: static int
    - disciplinaOptativa: static int
    + matricularDisciplina(Disciplina disciplina): void
    + checarOptativas(): boolean
    + cancelarMatricula(Disciplina disciplina): boolean
}

class Professor{
    - nome: String
    - turma: Turma
    + checarAlunos(Disciplina disciplina): List<Aluno>
    + adicionarTurma(Turma turma): void
}

class Disciplina {
    - cargaHoraria: float
    - tipo: TipoDisciplins
    - curso: Curso
    - List<Turma>: turmas
    - aberta: boolean
    + checarAlunosMatriculados(): List<Aluno>
    + fecharDisciplina(): void
    + alocarAluno(Aluno aluno): boolean
    + removerAluno(Aluno aluno): boolean
}

enum TipoDisciplina {
    - OBRIGATORIA
    - OPTATIVA
}

class Turma {
    - semestre: String
    - ano: Date
    - disciplina: Disciplina
    - professor: Professor
    - status: Status
    - minAlunos: static int = 3
    - maxAlunos: static int = 60
    - alunos: List<Aluno>
    + cancelarTurma(): void
    + adicionarAluno(Aluno aluno): void
    + removerAluno(Aluno aluno): void
}

enum StatusTurma {
    - ABERTA
    - FECHADA
    - CANCELADA
    - CONCLUIDA
}

skinparam classAttributeIconSizeÂ 0
@enduml